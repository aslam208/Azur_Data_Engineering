{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfAzureGuru208Project1"
		},
		"LinkedService_MAC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LinkedService_MAC'"
		},
		"LinkedService_P_SelfHosted_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LinkedService_P_SelfHosted'"
		},
		"LinkedService_SQL_MAC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedService_SQL_MAC'"
		},
		"LinkedService_MAC_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\data\\SourceData"
		},
		"LinkedService_MAC_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Mohammed Aslam"
		},
		"LinkedService_P_SelfHosted_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().vFilePath}"
		},
		"LinkedService_P_SelfHosted_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "@{linkedService().vUserName}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/srcDataSetBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_LinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pDirectory": {
						"type": "String"
					},
					"pFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pDirectory",
							"type": "Expression"
						},
						"fileSystem": "container-de-aslam"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcDataSet_P_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_LinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileSystem": {
						"type": "String"
					},
					"pDirectory": {
						"type": "String"
					},
					"pFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().pFileSystem",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_MAC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LinkedService_MAC_properties_typeProperties_host')]",
					"userId": "[parameters('LinkedService_MAC_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LinkedService_MAC_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimeMAC",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_P_SelfHosted')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"vFilePath": {
						"type": "String"
					},
					"vUserName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LinkedService_P_SelfHosted_properties_typeProperties_host')]",
					"userId": "[parameters('LinkedService_P_SelfHosted_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LinkedService_P_SelfHosted_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimeMAC",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_SQL_MAC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_SQL_MAC_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeMAC",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_IPL2016_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_HttpServer_GitHub",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "ipl_2008.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_IPL_2008_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage_Pproject1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ipl_2008.json",
						"folderPath": "bronze",
						"fileSystem": "project1"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydataPipeLine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "datasetEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Target_Dataset_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "metadataDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addminutes(utcnow(),-120)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@addminutes(utcnow(),-90)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete2",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "outputDataSet_P",
											"type": "DatasetReference",
											"parameters": {
												"pFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ADLS_LinkedService",
												"type": "LinkedServiceReference"
											},
											"path": "container-de-aslam/Logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFileSystem": {
						"type": "String",
						"defaultValue": "container-de-aslam"
					},
					"pDirectory": {
						"type": "String",
						"defaultValue": "hana_config"
					},
					"pFileName": {
						"type": "String",
						"defaultValue": "hana_config.txt"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineMetaDataForLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "srcDataSetBinary",
								"type": "DatasetReference",
								"parameters": {
									"pDirectory": "output",
									"pFileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(variables('vFileName'),'.csv')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "srcDataSetBinary",
														"type": "DatasetReference",
														"parameters": {
															"pDirectory": "output",
															"pFileName": {
																"value": "@variables('vFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "sinkDataSetBinary",
														"type": "DatasetReference",
														"parameters": {
															"pFileName": "@variables('vFileName')",
															"pDirectory": "output_csv"
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(variables('vFileName'),'.txt')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data2",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "srcDataSetBinary",
														"type": "DatasetReference",
														"parameters": {
															"pDirectory": "output",
															"pFileName": {
																"value": "@variables('vFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "sinkDataSetBinary",
														"type": "DatasetReference",
														"parameters": {
															"pFileName": {
																"value": "@variables('vFileName')",
																"type": "Expression"
															},
															"pDirectory": "output_txt"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"vFileName": {
						"type": "String"
					},
					"vOutputFolder": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcDataSetBinary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSet_cvs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_MAC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "EmployeeLocal.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_MAC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Employee_sql_mac')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_SQL_MAC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_SQL_MAC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scrDataSet_P_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_P_SelfHosted",
					"type": "LinkedServiceReference",
					"parameters": {
						"vFilePath": {
							"value": "@dataset().vFilePath",
							"type": "Expression"
						},
						"vUserName": {
							"value": "@dataset().vUserName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"vFilePath": {
						"type": "String"
					},
					"vUserName": {
						"type": "String"
					},
					"srcDirectory": {
						"type": "String"
					},
					"srcFileName": {
						"type": "String"
					},
					"srcSheetName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().srcSheetName",
						"type": "Expression"
					},
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().srcFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().srcDirectory",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_P_SelfHosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "outputDataSet",
								"type": "DatasetReference"
							},
							"name": "sourceInput"
						},
						{
							"dataset": {
								"referenceName": "inputDataSet",
								"type": "DatasetReference"
							},
							"name": "sourceInputData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sinkDataSet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tId as integer,\n\t\tName as string,\n\t\tAge as string,\n\t\tDept as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> sourceInput\nsource(output(\n\t\tName as string,\n\t\tAge as string,\n\t\tDept as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceInputData\nsourceInput derive(dummy = 'dummu') ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(dummy),\n\tmaxRow = max(Id)) ~> Aggregate1\nAggregate1, sourceInputData join(1==1,\n\tjoinType:'cross',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nJoin1 keyGenerate(output(SurrogateKey as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SurrogateKey1\nSurrogateKey1 derive(Id = toInteger(maxRow)+toInteger(SurrogateKey)) ~> DerivedColumn2\nDerivedColumn2 select(mapColumn(\n\t\tId,\n\t\tName,\n\t\tAge,\n\t\tDept\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, sourceInput union(byName: true,\n\tpartitionBy('hash', 1))~> Union1\nUnion1 sort(asc(Id, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tName as string,\n\t\tAge as string,\n\t\tDept as string\n\t),\n\tpartitionFileNames:['Employee.csv'],\n\tumask: 0033,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sinkDataSet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Window1"
						}
					],
					"script": "source(output(\n\t\tId as integer,\n\t\tName as string,\n\t\tAge as string,\n\t\tDept as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 window(asc(Id, true),\n\trunningt = sum(toInteger(Id)),\n\tpartitionBy('hash', 1)) ~> Window1\nWindow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tName as string,\n\t\tAge as string,\n\t\tDept as string\n\t),\n\tpartitionFileNames:['RunningTotal.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SurrogateKeyPipeLine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceInput": {},
									"sourceInputData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_from_azure_mac')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "input",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_blob_input_datasource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Employee_sql_mac",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-10T18:23:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Employee_sql_mac')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataSet_cvs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Target_Dataset_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataSet_cvs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "scrDataSet_P_Excel",
								"type": "DatasetReference",
								"parameters": {
									"vFilePath": {
										"value": "@pipeline().parameters.vFilePath",
										"type": "Expression"
									},
									"vUserName": {
										"value": "@pipeline().parameters.vUserName",
										"type": "Expression"
									},
									"srcDirectory": {
										"value": "@pipeline().parameters.srcDirectory",
										"type": "Expression"
									},
									"srcFileName": {
										"value": "@pipeline().parameters.srcFileName",
										"type": "Expression"
									},
									"srcSheetName": {
										"value": "@pipeline().parameters.srcSheetName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sinkDataSet_P_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"sinkFilePath": {
										"value": "@pipeline().parameters.sinkFilePath",
										"type": "Expression"
									},
									"sinkDirectory": {
										"value": "@pipeline().parameters.sinkDirectory",
										"type": "Expression"
									},
									"sinkFileName": {
										"value": "@pipeline().parameters.sinkFileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"vFilePath": {
						"type": "String"
					},
					"vUserName": {
						"type": "String"
					},
					"srcDirectory": {
						"type": "String"
					},
					"srcFileName": {
						"type": "String"
					},
					"srcSheetName": {
						"type": "String"
					},
					"sinkFilePath": {
						"type": "String"
					},
					"sinkFileName": {
						"type": "String"
					},
					"sinkDirectory": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/scrDataSet_P_Excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineRunningTotal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-08T19:59:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		}
	]
}