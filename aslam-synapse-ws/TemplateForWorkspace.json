{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "aslam-synapse-ws"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=aslam-synapse-ws.database.windows.net;Initial Catalog=aslam_synapse_dp"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"aslam-synapse-ws-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'aslam-synapse-ws-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:aslam-synapse-ws.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"aslam-synapse-ws-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://aslamadls.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TO_DWH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/TO_DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "NewName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_CSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aslam-synapse-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"INPUT_FOLTER": {
						"type": "String",
						"defaultValue": "input"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee.csv",
						"folderPath": {
							"value": "@dataset().INPUT_FOLTER",
							"type": "Expression"
						},
						"fileSystem": "synapse-fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/aslam-synapse-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_CSV_OUTPUT')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aslam-synapse-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"OUTPUT_FOLDER": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().OUTPUT_FOLDER",
							"type": "Expression"
						},
						"fileSystem": "synapse-fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/aslam-synapse-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_EPLOYEE')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aslam-synapse-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "synapse-fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/aslam-synapse-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aslam-synapse-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee.csv",
						"folderPath": "output",
						"fileSystem": "synapse-fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/aslam-synapse-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aslam-synapse-ws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "synapse-fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/aslam-synapse-ws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServer1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aslam-synapse-ws-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('aslam-synapse-ws-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aslam-synapse-ws-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('aslam-synapse-ws-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger 1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline 1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-12-16T14:23:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Pipeline 1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_ADLS')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as short,",
						"          Name as string,",
						"          Department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(NewName = concat(toString(Id),\" \",Department)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_CSV')]",
				"[concat(variables('workspaceId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_EMPLOYEE')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EPLOYEE",
								"type": "DatasetReference"
							},
							"name": "OutputStreamDFEmployee"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "Curated"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "ToDWD"
						}
					],
					"transformations": [
						{
							"name": "NewName"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as integer,",
						"          Column_2 as string,",
						"          Column_3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> OutputStreamDFEmployee",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"OutputStreamDFEmployee derive(NewName = concat(toString(Column_1), \" \",Column_2)) ~> NewName",
						"NewName sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Curated",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          Department as string,",
						"          NewName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ToDWD"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_EPLOYEE')]",
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TO_DWH')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_EPLOYEE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Id as short,",
						"          Name as string,",
						"          Department as string,",
						"          NewName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> source1",
						"source1 sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          Department as string,",
						"          NewName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Id,",
						"          Name,",
						"          Department,",
						"          NewName",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_EPLOYEE')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create SQL Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "Create Table Employee(Id int, Name VARCHAR(50),Department VARCHAR(20))\n\nselect * from Employee;\n\nALTER table Employee\nadd NewName VARCHAR(50)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "aslam_synapse_dp",
						"poolName": "aslam_synapse_dp"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreatePartitionedTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [dbo].[FactInternetSales]\n(\n        [ProductKey]            int          NOT NULL\n    ,   [OrderDateKey]          int          NOT NULL\n    ,   [CustomerKey]           int          NOT NULL\n    ,   [PromotionKey]          int          NOT NULL\n    ,   [SalesOrderNumber]      nvarchar(20) NOT NULL\n    ,   [OrderQuantity]         smallint     NOT NULL\n    ,   [UnitPrice]             money        NOT NULL\n    ,   [SalesAmount]           money        NOT NULL\n)\nWITH\n(   CLUSTERED COLUMNSTORE INDEX\n,   DISTRIBUTION = HASH([ProductKey])\n,   PARTITION   (   [OrderDateKey] RANGE RIGHT FOR VALUES\n                    (20000101\n                    )\n                )\n);\n\n\nselect * from [dbo].[FactInternetSales]\n\n\n\n\nSELECT  QUOTENAME(s.[name])+'.'+QUOTENAME(t.[name]) as Table_name\n,       i.[name] as Index_name\n,       p.partition_number as Partition_nmbr\n,       p.[rows] as Row_count\n,       p.[data_compression_desc] as Data_Compression_desc\nFROM    sys.partitions p\nJOIN    sys.tables     t    ON    p.[object_id]   = t.[object_id]\nJOIN    sys.schemas    s    ON    t.[schema_id]   = s.[schema_id]\nJOIN    sys.indexes    i    ON    p.[object_id]   = i.[object_Id]\n                            AND   p.[index_Id]    = i.[index_Id]\nWHERE t.[name] = 'FactInternetSales';\n\n\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('FactInternetSales')\n\nselect * from dbo.FactInternetSales\n\nalter table dbo.FactInternetSales split range (20000101);\nALTER TABLE FactInternetSales SPLIT RANGE (20010101);\n\n\nINSERT INTO dbo.FactInternetSales\nVALUES (1,19990101,1,1,1,1,1,1);\n\nINSERT INTO dbo.FactInternetSales\nVALUES (1,20000101,1,1,1,1,1,1);\n\n\n\nCREATE TABLE dbo.FactInternetSales_20000101\n    WITH    (   DISTRIBUTION = HASH(ProductKey)\n            ,   CLUSTERED COLUMNSTORE INDEX              \n            ,   PARTITION   (   [OrderDateKey] RANGE RIGHT FOR VALUES\n                                (20000101\n                                )\n                            )\n)\nAS\nSELECT *\nFROM    FactInternetSales\nWHERE   1=2;\n\n\nselect * from dbo.FactInternetSales_20000101\n\n\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('dbo.FactInternetSales_20000101')\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('dbo.FactInternetSales')\n\n\nALTER TABLE FactInternetSales SWITCH PARTITION 2 TO FactInternetSales_20000101 PARTITION 2\n\nALTER TABLE FactInternetSales SPLIT RANGE(20010101);\n\nSELECT * FROM SYS.PARTITIONS WHERE OBJECT_ID=OBJECT_ID('FactInternetSales')\n\n\nSELECT  *\nFROM    [dbo].[FactInternetSales_20000101]\nWHERE   [OrderDateKey] >= 20000101\nAND     [OrderDateKey] <  20010101;\n\n\nCREATE TABLE [dbo].[FactInternetSales_20000101_20010101]\n    WITH    (   DISTRIBUTION = HASH([ProductKey])\n            ,   CLUSTERED COLUMNSTORE INDEX\n            ,   PARTITION   (   [OrderDateKey] RANGE RIGHT FOR VALUES\n                                (20000101,20010101\n                                )\n                            )\n            )\nAS\nSELECT  *\nFROM    [dbo].[FactInternetSales_20000101]\nWHERE   [OrderDateKey] >= 20000101\nAND     [OrderDateKey] <  20010101;\n\nALTER TABLE dbo.FactInternetSales_20000101_20010101 SWITCH PARTITION 2 TO dbo.FactInternetSales PARTITION 2;\n\nselect * from [dbo].[FactInternetSales_20000101_20010101]\n\nselect * from dbo.FactInternetSales_20000101\n\nselect * from dbo.FactInternetSales\n\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('FactInternetSales_20000101_20010101')\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('FactInternetSales_20000101')\nselect * from sys.partitions where OBJECT_ID=OBJECT_ID('FactInternetSales')\n\n\n\n\n\nSELECT  *\nFROM    [dbo].[FactInternetSales]\nWHERE   [OrderDateKey] >= 20000101\nAND     [OrderDateKey] <  20010101\n\n\n\nSELECT * FROM [cso].[FactOnlineSales];\n\n\n\nCREATE TABLE [cso].[FactOnlineSales_Big_Partitioned]\nWITH\n(   CLUSTERED COLUMNSTORE INDEX\n,   DISTRIBUTION = HASH([ProductKey])\n,   PARTITION\n    (\n        [DateKey] RANGE RIGHT FOR VALUES\n        (\n            '2008-01-01 00:00:00:00',\n'2008-01-02 00:00:00:00',\n'2008-01-03 00:00:00:00',\n'2008-01-04 00:00:00:00',\n'2008-01-05 00:00:00:00',\n'2008-01-06 00:00:00:00',\n'2008-01-07 00:00:00:00',\n'2008-01-08 00:00:00:00',\n'2008-01-09 00:00:00:00',\n'2008-01-10 00:00:00:00',\n'2008-01-11 00:00:00:00',\n'2008-01-12 00:00:00:00',\n'2008-01-13 00:00:00:00',\n'2008-01-14 00:00:00:00',\n'2008-01-15 00:00:00:00',\n'2008-01-16 00:00:00:00',\n'2008-01-17 00:00:00:00',\n'2008-01-18 00:00:00:00',\n'2008-01-19 00:00:00:00',\n'2008-01-20 00:00:00:00',\n'2008-01-21 00:00:00:00',\n'2008-01-22 00:00:00:00',\n'2008-01-23 00:00:00:00',\n'2008-01-24 00:00:00:00',\n'2008-01-25 00:00:00:00',\n'2008-01-26 00:00:00:00',\n'2008-01-27 00:00:00:00',\n'2008-01-28 00:00:00:00',\n'2008-01-29 00:00:00:00',\n'2008-01-30 00:00:00:00',\n'2008-01-31 00:00:00:00',\n'2008-02-01 00:00:00:00',\n'2008-02-02 00:00:00:00',\n'2008-02-03 00:00:00:00',\n'2008-02-04 00:00:00:00',\n'2008-02-05 00:00:00:00',\n'2008-02-06 00:00:00:00',\n'2008-02-07 00:00:00:00',\n'2008-02-08 00:00:00:00',\n'2008-02-09 00:00:00:00',\n'2008-02-10 00:00:00:00',\n'2008-02-11 00:00:00:00',\n'2008-02-12 00:00:00:00',\n'2008-02-13 00:00:00:00',\n'2008-02-14 00:00:00:00',\n'2008-02-15 00:00:00:00',\n'2008-02-16 00:00:00:00',\n'2008-02-17 00:00:00:00',\n'2008-02-18 00:00:00:00',\n'2008-02-19 00:00:00:00',\n'2008-02-20 00:00:00:00',\n'2008-02-21 00:00:00:00',\n'2008-02-22 00:00:00:00',\n'2008-02-23 00:00:00:00',\n'2008-02-24 00:00:00:00',\n'2008-02-25 00:00:00:00',\n'2008-02-26 00:00:00:00',\n'2008-02-27 00:00:00:00',\n'2008-02-28 00:00:00:00',\n'2008-02-29 00:00:00:00',\n'2008-03-01 00:00:00:00',\n'2008-03-02 00:00:00:00',\n'2008-03-03 00:00:00:00',\n'2008-03-04 00:00:00:00',\n'2008-03-05 00:00:00:00',\n'2008-03-06 00:00:00:00',\n'2008-03-07 00:00:00:00',\n'2008-03-08 00:00:00:00',\n'2008-03-09 00:00:00:00',\n'2008-03-10 00:00:00:00',\n'2008-03-11 00:00:00:00',\n'2008-03-12 00:00:00:00',\n'2008-03-13 00:00:00:00',\n'2008-03-14 00:00:00:00',\n'2008-03-15 00:00:00:00',\n'2008-03-16 00:00:00:00',\n'2008-03-17 00:00:00:00',\n'2008-03-18 00:00:00:00',\n'2008-03-19 00:00:00:00',\n'2008-03-20 00:00:00:00',\n'2008-03-21 00:00:00:00',\n'2008-03-22 00:00:00:00',\n'2008-03-23 00:00:00:00',\n'2008-03-24 00:00:00:00',\n'2008-03-25 00:00:00:00',\n'2008-03-26 00:00:00:00',\n'2008-03-27 00:00:00:00',\n'2008-03-28 00:00:00:00',\n'2008-03-29 00:00:00:00',\n'2008-03-30 00:00:00:00',\n'2008-03-31 00:00:00:00',\n'2008-04-01 00:00:00:00',\n'2008-04-02 00:00:00:00',\n'2008-04-03 00:00:00:00',\n'2008-04-04 00:00:00:00',\n'2008-04-05 00:00:00:00',\n'2008-04-06 00:00:00:00',\n'2008-04-07 00:00:00:00',\n'2008-04-08 00:00:00:00',\n'2008-04-09 00:00:00:00',\n'2008-04-10 00:00:00:00',\n'2008-04-11 00:00:00:00',\n'2008-04-12 00:00:00:00',\n'2008-04-13 00:00:00:00',\n'2008-04-14 00:00:00:00',\n'2008-04-15 00:00:00:00',\n'2008-04-16 00:00:00:00',\n'2008-04-17 00:00:00:00',\n'2008-04-18 00:00:00:00',\n'2008-04-19 00:00:00:00',\n'2008-04-20 00:00:00:00',\n'2008-04-21 00:00:00:00',\n'2008-04-22 00:00:00:00',\n'2008-04-23 00:00:00:00',\n'2008-04-24 00:00:00:00',\n'2008-04-25 00:00:00:00',\n'2008-04-26 00:00:00:00',\n'2008-04-27 00:00:00:00',\n'2008-04-28 00:00:00:00',\n'2008-04-29 00:00:00:00',\n'2008-04-30 00:00:00:00',\n'2008-05-01 00:00:00:00',\n'2008-05-02 00:00:00:00',\n'2008-05-03 00:00:00:00',\n'2008-05-04 00:00:00:00',\n'2008-05-05 00:00:00:00',\n'2008-05-06 00:00:00:00',\n'2008-05-07 00:00:00:00',\n'2008-05-08 00:00:00:00',\n'2008-05-09 00:00:00:00',\n'2008-05-10 00:00:00:00',\n'2008-05-11 00:00:00:00',\n'2008-05-12 00:00:00:00',\n'2008-05-13 00:00:00:00',\n'2008-05-14 00:00:00:00',\n'2008-05-15 00:00:00:00',\n'2008-05-16 00:00:00:00',\n'2008-05-17 00:00:00:00',\n'2008-05-18 00:00:00:00',\n'2008-05-19 00:00:00:00',\n'2008-05-20 00:00:00:00',\n'2008-05-21 00:00:00:00',\n'2008-05-22 00:00:00:00',\n'2008-05-23 00:00:00:00',\n'2008-05-24 00:00:00:00',\n'2008-05-25 00:00:00:00',\n'2008-05-26 00:00:00:00',\n'2008-05-27 00:00:00:00',\n'2008-05-28 00:00:00:00',\n'2008-05-29 00:00:00:00',\n'2008-05-30 00:00:00:00',\n'2008-05-31 00:00:00:00',\n'2008-06-01 00:00:00:00',\n'2008-06-02 00:00:00:00',\n'2008-06-03 00:00:00:00',\n'2008-06-04 00:00:00:00',\n'2008-06-05 00:00:00:00',\n'2008-06-06 00:00:00:00',\n'2008-06-07 00:00:00:00',\n'2008-06-08 00:00:00:00',\n'2008-06-09 00:00:00:00',\n'2008-06-10 00:00:00:00',\n'2008-06-11 00:00:00:00',\n'2008-06-12 00:00:00:00',\n'2008-06-13 00:00:00:00',\n'2008-06-14 00:00:00:00',\n'2008-06-15 00:00:00:00',\n'2008-06-16 00:00:00:00',\n'2008-06-17 00:00:00:00',\n'2008-06-18 00:00:00:00',\n'2008-06-19 00:00:00:00',\n'2008-06-20 00:00:00:00',\n'2008-06-21 00:00:00:00',\n'2008-06-22 00:00:00:00',\n'2008-06-23 00:00:00:00',\n'2008-06-24 00:00:00:00',\n'2008-06-25 00:00:00:00',\n'2008-06-26 00:00:00:00',\n'2008-06-27 00:00:00:00',\n'2008-06-28 00:00:00:00',\n'2008-06-29 00:00:00:00',\n'2008-06-30 00:00:00:00',\n'2008-07-01 00:00:00:00',\n'2008-07-02 00:00:00:00',\n'2008-07-03 00:00:00:00',\n'2008-07-04 00:00:00:00',\n'2008-07-05 00:00:00:00',\n'2008-07-06 00:00:00:00',\n'2008-07-07 00:00:00:00',\n'2008-07-08 00:00:00:00',\n'2008-07-09 00:00:00:00',\n'2008-07-10 00:00:00:00',\n'2008-07-11 00:00:00:00',\n'2008-07-12 00:00:00:00',\n'2008-07-13 00:00:00:00',\n'2008-07-14 00:00:00:00',\n'2008-07-15 00:00:00:00',\n'2008-07-16 00:00:00:00',\n'2008-07-17 00:00:00:00',\n'2008-07-18 00:00:00:00',\n'2008-07-19 00:00:00:00',\n'2008-07-20 00:00:00:00',\n'2008-07-21 00:00:00:00',\n'2008-07-22 00:00:00:00',\n'2008-07-23 00:00:00:00',\n'2008-07-24 00:00:00:00',\n'2008-07-25 00:00:00:00',\n'2008-07-26 00:00:00:00',\n'2008-07-27 00:00:00:00',\n'2008-07-28 00:00:00:00',\n'2008-07-29 00:00:00:00',\n'2008-07-30 00:00:00:00',\n'2008-07-31 00:00:00:00',\n'2008-08-01 00:00:00:00',\n'2008-08-02 00:00:00:00',\n'2008-08-03 00:00:00:00',\n'2008-08-04 00:00:00:00',\n'2008-08-05 00:00:00:00',\n'2008-08-06 00:00:00:00',\n'2008-08-07 00:00:00:00',\n'2008-08-08 00:00:00:00',\n'2008-08-09 00:00:00:00',\n'2008-08-10 00:00:00:00',\n'2008-08-11 00:00:00:00',\n'2008-08-12 00:00:00:00',\n'2008-08-13 00:00:00:00',\n'2008-08-14 00:00:00:00',\n'2008-08-15 00:00:00:00',\n'2008-08-16 00:00:00:00',\n'2008-08-17 00:00:00:00',\n'2008-08-18 00:00:00:00',\n'2008-08-19 00:00:00:00',\n'2008-08-20 00:00:00:00',\n'2008-08-21 00:00:00:00',\n'2008-08-22 00:00:00:00',\n'2008-08-23 00:00:00:00',\n'2008-08-24 00:00:00:00',\n'2008-08-25 00:00:00:00',\n'2008-08-26 00:00:00:00',\n'2008-08-27 00:00:00:00',\n'2008-08-28 00:00:00:00',\n'2008-08-29 00:00:00:00',\n'2008-08-30 00:00:00:00',\n'2008-08-31 00:00:00:00',\n'2008-09-01 00:00:00:00',\n'2008-09-02 00:00:00:00',\n'2008-09-03 00:00:00:00',\n'2008-09-04 00:00:00:00',\n'2008-09-05 00:00:00:00',\n'2008-09-06 00:00:00:00',\n'2008-09-07 00:00:00:00',\n'2008-09-08 00:00:00:00',\n'2008-09-09 00:00:00:00',\n'2008-09-10 00:00:00:00',\n'2008-09-11 00:00:00:00',\n'2008-09-12 00:00:00:00',\n'2008-09-13 00:00:00:00',\n'2008-09-14 00:00:00:00',\n'2008-09-15 00:00:00:00',\n'2008-09-16 00:00:00:00',\n'2008-09-17 00:00:00:00',\n'2008-09-18 00:00:00:00',\n'2008-09-19 00:00:00:00',\n'2008-09-20 00:00:00:00',\n'2008-09-21 00:00:00:00',\n'2008-09-22 00:00:00:00',\n'2008-09-23 00:00:00:00',\n'2008-09-24 00:00:00:00',\n'2008-09-25 00:00:00:00',\n'2008-09-26 00:00:00:00',\n'2008-09-27 00:00:00:00',\n'2008-09-28 00:00:00:00',\n'2008-09-29 00:00:00:00',\n'2008-09-30 00:00:00:00',\n'2008-10-01 00:00:00:00',\n'2008-10-02 00:00:00:00',\n'2008-10-03 00:00:00:00',\n'2008-10-04 00:00:00:00',\n'2008-10-05 00:00:00:00',\n'2008-10-06 00:00:00:00',\n'2008-10-07 00:00:00:00',\n'2008-10-08 00:00:00:00',\n'2008-10-09 00:00:00:00',\n'2008-10-10 00:00:00:00',\n'2008-10-11 00:00:00:00',\n'2008-10-12 00:00:00:00',\n'2008-10-13 00:00:00:00',\n'2008-10-14 00:00:00:00',\n'2008-10-15 00:00:00:00',\n'2008-10-16 00:00:00:00',\n'2008-10-17 00:00:00:00',\n'2008-10-18 00:00:00:00',\n'2008-10-19 00:00:00:00',\n'2008-10-20 00:00:00:00',\n'2008-10-21 00:00:00:00',\n'2008-10-22 00:00:00:00',\n'2008-10-23 00:00:00:00',\n'2008-10-24 00:00:00:00',\n'2008-10-25 00:00:00:00',\n'2008-10-26 00:00:00:00',\n'2008-10-27 00:00:00:00',\n'2008-10-28 00:00:00:00',\n'2008-10-29 00:00:00:00',\n'2008-10-30 00:00:00:00',\n'2008-10-31 00:00:00:00',\n'2008-11-01 00:00:00:00',\n'2008-11-02 00:00:00:00',\n'2008-11-03 00:00:00:00',\n'2008-11-04 00:00:00:00',\n'2008-11-05 00:00:00:00',\n'2008-11-06 00:00:00:00',\n'2008-11-07 00:00:00:00',\n'2008-11-08 00:00:00:00',\n'2008-11-09 00:00:00:00',\n'2008-11-10 00:00:00:00',\n'2008-11-11 00:00:00:00',\n'2008-11-12 00:00:00:00',\n'2008-11-13 00:00:00:00',\n'2008-11-14 00:00:00:00',\n'2008-11-15 00:00:00:00',\n'2008-11-16 00:00:00:00',\n'2008-11-17 00:00:00:00',\n'2008-11-18 00:00:00:00',\n'2008-11-19 00:00:00:00',\n'2008-11-20 00:00:00:00',\n'2008-11-21 00:00:00:00',\n'2008-11-22 00:00:00:00',\n'2008-11-23 00:00:00:00',\n'2008-11-24 00:00:00:00',\n'2008-11-25 00:00:00:00',\n'2008-11-26 00:00:00:00',\n'2008-11-27 00:00:00:00',\n'2008-11-28 00:00:00:00',\n'2008-11-29 00:00:00:00',\n'2008-11-30 00:00:00:00',\n'2008-12-01 00:00:00:00',\n'2008-12-02 00:00:00:00',\n'2008-12-03 00:00:00:00',\n'2008-12-04 00:00:00:00',\n'2008-12-05 00:00:00:00',\n'2008-12-06 00:00:00:00',\n'2008-12-07 00:00:00:00',\n'2008-12-08 00:00:00:00',\n'2008-12-09 00:00:00:00',\n'2008-12-10 00:00:00:00',\n'2008-12-11 00:00:00:00',\n'2008-12-12 00:00:00:00',\n'2008-12-13 00:00:00:00',\n'2008-12-14 00:00:00:00',\n'2008-12-15 00:00:00:00',\n'2008-12-16 00:00:00:00',\n'2008-12-17 00:00:00:00',\n'2008-12-18 00:00:00:00',\n'2008-12-19 00:00:00:00',\n'2008-12-20 00:00:00:00',\n'2008-12-21 00:00:00:00',\n'2008-12-22 00:00:00:00',\n'2008-12-23 00:00:00:00',\n'2008-12-24 00:00:00:00',\n'2008-12-25 00:00:00:00',\n'2008-12-26 00:00:00:00',\n'2008-12-27 00:00:00:00',\n'2008-12-28 00:00:00:00',\n'2008-12-29 00:00:00:00',\n'2008-12-30 00:00:00:00',\n'2008-12-31 00:00:00:00',\n'2009-12-31 00:00:00:00'\n\n        )\n    )\n)\nAS\nSELECT * FROM [cso].[FactOnlineSales];\n\n\n\nSELECT * FROM [cso].[FactOnlineSales]\n\n\nSELECT  pnp.partition_number, sum(nps.[row_count]) AS Row_Count\nFROM\n   sys.tables t\nINNER JOIN sys.indexes i\n    ON  t.[object_id] = i.[object_id]\n    AND i.[index_id] <= 1 /* HEAP = 0, CLUSTERED or CLUSTERED_COLUMNSTORE =1 */\nINNER JOIN sys.pdw_table_mappings tm\n    ON t.[object_id] = tm.[object_id]\nINNER JOIN sys.pdw_nodes_tables nt\n    ON tm.[physical_name] = nt.[name]\nINNER JOIN sys.pdw_nodes_partitions pnp \n    ON nt.[object_id]=pnp.[object_id] \n    AND nt.[pdw_node_id]=pnp.[pdw_node_id] \n    AND nt.[distribution_id] = pnp.[distribution_id]\nINNER JOIN sys.dm_pdw_nodes_db_partition_stats nps\n    ON nt.[object_id] = nps.[object_id]\n    AND nt.[pdw_node_id] = nps.[pdw_node_id]\n    AND nt.[distribution_id] = nps.[distribution_id]\n    AND pnp.[partition_id]=nps.[partition_id]\nWHERE t.name='FactOnlineSales_Big_Partitioned_TEMP'\nGROUP BY pnp.partition_number;\n\n\n select COUNT(1) from cso.FactOnlineSales_Big_Partitioned where [DateKey] >= '2008-01-01 00:00:00:00' AND [DateKey] < '2008-12-31 00:00:00:00'   --12627608     dec 10993 , jan - 7973    --2009   16415\n  select count(*) from cso.FactOnlineSales_Big_Partitioned where [DateKey] >= '2007-12-31 00:00:00:00' AND [DateKey] < '2008-12-31 00:00:00:00' \n\n drop table [cso].[FactOnlineSales_Big_Partitioned_TEMP]\n\n ALTER TABLE cso.FactOnlineSales_Big_Partitioned SPLIT RANGE('2009-12-31 00:00:00:00')\n\n \nCREATE TABLE [cso].[FactOnlineSales_Big_Partitioned_TEMP]\nWITH\n(   CLUSTERED COLUMNSTORE INDEX\n,   DISTRIBUTION = HASH([ProductKey])\n,   PARTITION\n    (\n        [DateKey] RANGE RIGHT FOR VALUES\n        (\n            '2009-12-31 00:00:00:00'\n        )))\nAS \n\nSELECT * FROM [cso].[FactOnlineSales_Big_Partitioned] WHERE 1=2\n\n\n\n\n\nSELECT MIN(DateKey), max(DateKey) from [cso].FactOnlineSales_Big_Partitioned_TEMP\n\n\nALTER TABLE [cso].[FactOnlineSales_Big_Partitioned_TEMP] SWITCH PARTITION 2 TO  [cso].[FactOnlineSales_Big_Partitioned_TEMP] PARTITION  1\n\n\nALTER TABLE [cso].[FactOnlineSales_Big_Partitioned] SPLIT RANGE('2010-01-31 00:00:00:00')\nALTER TABLE [cso].[FactOnlineSales_Big_Partitioned_TEMP] SWITCH PARTITION  2 TO [cso].[FactOnlineSales_Big_Partitioned] PARTITION 368",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "aslam_synapse_dp",
						"poolName": "aslam_synapse_dp"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aslam_synapse_dp')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}